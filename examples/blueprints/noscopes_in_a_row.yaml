# Rule #5 -> 10 noscopes in a row
OnPlayerKillNoscope.hard:
  title:
    en: "{count}/{total} Noscopes in a row"
    de: "{count}/{total} Noscopes hintereinander"
  type: player_kill
  amount: 10
  cooldown: 0
  is_visible: true
  announce_progress: true
  announce_completion: true
  data:
    PlayerSessions:
      setpoints: "25"
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: noscope
      operator: bool==
      value: "true"
    - key: isselfkill
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
  actions:
    - type: challenge.mark.completed
      values:
        - OnPlayerKillNoscope.hard.control.noscope
    - type: challenge.mark.completed
      values:
        - OnPlayerKillNoscope.hard.control.donotdie
  dependencies:
    - OnPlayerKillNoscope.easy
# Rule #4 -> 5 control rule for hard challenge
OnPlayerKillNoscope.hard.control.noscope:
  title:
    en: "Rule broken: without Scope"
    de: "Regel verletzt: ohne Scope"
  type: player_kill
  amount: 1
  cooldown: 0
  is_visible: false
  announce_progress: false
  announce_completion: false
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: noscope
      operator: bool==
      value: "false"
    - key: isselfkill
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
  actions:
    - type: notify.player.progress.rule_broken
      values:
        - OnPlayerKillNoscope.hard
    - type: challenge.delete.progress
      values:
        - OnPlayerKillNoscope.hard
    - type: challenge.delete.completed
      values:
        - OnPlayerKillNoscope.hard.control.noscope
  dependencies:
    - OnPlayerKillNoscope.easy
# Rule #3 -> control rule for hard challenge
OnPlayerKillNoscope.hard.control.donotdie:
  title:
    en: "Rule broken: do not die"
    de: "Regel verletzt: ohne sterben"
  type: player_death
  amount: 1
  cooldown: 0
  is_visible: false
  announce_progress: false
  announce_completion: false
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: attacker.isbot
      operator: bool==
      value: "false"
  actions:
    - type: notify.player.progress.rule_broken
      values:
        - OnPlayerKillNoscope.hard
    - type: challenge.delete.progress
      values:
        - OnPlayerKillNoscope.hard
    - type: challenge.delete.completed
      values:
        - OnPlayerKillNoscope.hard.control.donotdie
  dependencies:
    - OnPlayerKillNoscope.easy
# Rule #2 -> 5 Noscopes in a row
OnPlayerKillNoscope.easy:
  title:
    en: "{count}/{total} Noscopes in a row"
    de: "{count}/{total} Noscopes hintereinander"
  type: player_kill
  amount: 5
  cooldown: 0
  is_visible: true
  announce_progress: true
  announce_completion: true
  data:
    PlayerSessions:
      setpoints: "10"
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: noscope
      operator: bool==
      value: "true"
    - key: isselfkill
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
  actions:
    - type: challenge.mark.completed
      values:
        - OnPlayerKillNoscope.easy.control.noscope
# Rule #1 -> control rule for noscope
OnPlayerKillNoscope.easy.control.noscope:
  title:
    en: "Rule broken: without scope"
    de: "Regel verletzt: ohne Scope"
  type: player_kill
  amount: 1
  cooldown: 0
  is_visible: false
  announce_progress: false
  announce_completion: false
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: noscope
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
  actions:
    - type: notify.player.progress.rule_broken
      values:
        - OnPlayerKillNoscope.easy
    - type: challenge.delete.progress
      values:
        - OnPlayerKillNoscope.easy
    - type: challenge.delete.completed
      values:
        - OnPlayerKillNoscope.easy.control.noscope
