# Rule #5 -> hard challenge
OnPlayerDeath.hard:
  title:
    en: "Master of the revolver <3 ({count}/{total})"
    de: "Meister des Revolvers <3 ({count}/{total})"
  type: player_kill
  amount: 15
  cooldown: 0
  is_visible: true
  announce_progress: true
  announce_completion: true
  data:
    PlayerSessions:
      setpoints: "30"
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: weapon
      operator: contains
      value: revolver
    - key: isteamkill
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
  actions:
    - type: challenge.mark.completed
      values:
        - OnPlayerDeath.hard.control.norevolverdeath
  dependencies:
    - OnPlayerDeath.medium
# Rule #4 -> control rule for hard challenge
OnPlayerDeath.hard.control.norevolverdeath:
  title:
    en: "Rule broken: you died because of a revolver"
    de: "Regel gebrochen: Du bist wegen eines Revolvers gestorben"
  type: player_death
  amount: 1
  cooldown: 0
  is_visible: false
  announce_progress: false
  announce_completion: false
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: weapon
      operator: contains
      value: revolver
    - key: attacker.isbot
      operator: bool==
      value: "false"
  actions:
    - type: notify.player.progress.rule_broken
      values:
        - OnPlayerDeath.hard
    - type: challenge.delete.progress
      values:
        - OnPlayerDeath.hard
    - type: challenge.delete.completed
      values:
        - OnPlayerDeath.hard.control.norevolverdeath
  dependencies:
    - OnPlayerDeath.medium
# Rule #3 -> medium challenge
OnPlayerDeath.medium:
  title:
    en: "revolver like in the wild west :D ({count}/{total})"
    de: "Revolver wie im wilden Westen :D ({count}/{total})"
  type: player_kill
  amount: 10
  cooldown: 0
  is_visible: true
  announce_progress: true
  announce_completion: true
  data:
    PlayerSessions:
      setpoints: "20"
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: weapon
      operator: contains
      value: revolver
    - key: isteamkill
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
  actions:
    - type: challenge.mark.completed
      values:
        - OnPlayerDeath.medium.control.norevolverdeath
  dependencies:
    - OnPlayerDeath.easy
# Rule #2 -> control rule for medium challenge
OnPlayerDeath.medium.control.norevolverdeath:
  title:
    en: "Rule broken: you died because of a revolver"
    de: "Regel gebrochen: Du bist wegen eines Revolvers gestorben"
  type: player_death
  amount: 1
  cooldown: 0
  is_visible: false
  announce_progress: false
  announce_completion: false
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: weapon
      operator: contains
      value: revolver
    - key: attacker.isbot
      operator: bool==
      value: "false"
  actions:
    - type: notify.player.progress.rule_broken
      values:
        - OnPlayerDeath.medium
    - type: challenge.delete.progress
      values:
        - OnPlayerDeath.medium
    - type: challenge.delete.completed
      values:
        - OnPlayerDeath.medium.control.norevolverdeath
  dependencies:
    - OnPlayerDeath.easy
# Rule #1 -> easy challenge
OnPlayerDeath.easy:
  title:
    en: "I like my revolver ({count}/{total})"
    de: "Ich mag meinen Revolver ({count}/{total})"
  type: player_kill
  amount: 5
  cooldown: 0
  is_visible: true
  announce_progress: true
  announce_completion: true
  data:
    PlayerSessions:
      setpoints: "10"
  rules:
    - key: global.iswarmup
      operator: bool==
      value: "false"
    - key: global.isduringround
      operator: bool==
      value: "true"
    - key: weapon
      operator: contains
      value: revolver
    - key: isteamkill
      operator: bool==
      value: "false"
    - key: victim.isbot
      operator: bool==
      value: "false"
